name: CI

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "*" ]

env:
  CACHED_DEPENDENCY_PATHS: ${{ github.workspace }}/Tuist/Dependencies
  DOTORI_IOS_DISCORD_WEBHOOK: ${{ secrets.DOTORI_IOS_DISCORD_WEBHOOK }}
  DOTORI_IOS_ROLE: ${{ secrets.DOTORI_IOS_ROLE }}

  MASTER_KEY_SECRET: ${{ secrets.MASTER_KEY_SECRET }}
  ENCRYPTED_MASTER_KEY_PATH: ${{ 'Tuist/master.key.gpg' }}
  DECRYPTED_MASTER_KEY_PATH: ${{ 'Tuist/master.key' }}

jobs:
  prepare-dependency:
    name: ‚öôÔ∏è Prepare for CI
    runs-on: masos-latest

    steps:
      - name: Select Xcode
        run: sudo xcode-select -s "/Applications/Xcode_14.3.app"

      - uses: actions/checkout@v2

      - name: Install tuist
        run: curl -Ls https://install.tuist.io | bash

      - name: Compute dependency cache key
        id: compute_hash
        run: echo "hash=${{ hashFiles('Tuist/Dependencies.swift') }}" >> $GITHUB_OUTPUT

      - name: Check dependency cache
        uses: actions/cache@v3
        id: cache_dependencies
        with:
          path: ${{ env.CACHED_DEPENDENCY_PATHS }}
          key: ${{ steps.compute_hash.outputs.hash }}

      - name: Install dependencies
        if: steps.cache_dependencies.outputs.cache-hit == ''
        run: tuist fetch
    outputs:
      dependency_cache_key: ${{ steps.compute_hash.outputs.hash }}

  test:
    name: üß™ Test
    runs-on: macos-latest
    needs: prepare-dependency

    steps:
    - uses: actions/checkout@v2
      with:
        xcode-version: latest

    - name: Install tuist
      run: curl -Ls https://install.tuist.io | bash

    - name: Check dependency cache
      uses: actions/cache@v3
      id: cache_dependencies
      with:
        path: ${{ env.CACHED_DEPENDENCY_PATHS }}
        key: ${{ needs.prepare-dependency.outputs.dependency_cache_key }}

    - name: Decode master.key
      run: gpg -d -o "$DECRYPTED_MASTER_KEY_PATH" --pinentry-mode=loopback --passphrase "$MASTER_KEY_SECRET" "$ENCRYPTED_MASTER_KEY_PATH"

    - name: Install dependencies
      if: steps.cache_dependencies.outputs.cache-hit != 'true'
      run: tuist fetch

    - name: Test with tuist
      run: TUIST_ENV=CI tuist test

    - name: Dotori iOS Test Success Discord Notification
      uses: sarisia/actions-status-discord@v1
      if: ${{ success() }}
      with: 
        title: "‚úÖ ÎèÑÌÜ†Î¶¨ iOS Test Success !"
        description: "Success to test üß©"
        webhook: ${{ env.DOTORI_IOS_DISCORD_WEBHOOK }}
        color: 0x43962A

    - name: Dotori iOS Test Failed Discord Notification
      uses: sarisia/actions-status-discord@v1
      if: ${{ failure() }}
      with: 
        title: "‚ùå ÎèÑÌÜ†Î¶¨ iOS Test Failed .."
        content: "<@${{ env.DOTORI_IOS_ROLE }}>"
        description: "Failed to test ü•∫"
        webhook: ${{ env.DOTORI_IOS_DISCORD_WEBHOOK }}
        color: 0xBB3639
